{"version":3,"sources":["node_modules/pixify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/check.js","src/tiltshift/TiltShiftAxisFilter.js","src/tiltshift/TiltShiftFilter.js","src/tiltshift/TiltShiftXFilter.js","src/tiltshift/TiltShiftYFilter.js","src/tiltshift"],"names":["f","exports","module","define","amd","g","window","global","self","this","tiltshift","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","PIXI","TiltShiftAxisFilter","Filter","uniforms","blur","gradientBlur","start","Point","innerHeight","end","delta","texSize","innerWidth","updateDelta","prototype","Object","create","constructor","x","y","defineProperties","get","set","value","TiltShiftFilter","tiltShiftXFilter","TiltShiftXFilter","tiltShiftYFilter","TiltShiftYFilter","apply","filterManager","input","output","renderTarget","getRenderTarget","returnRenderTarget","dx","dy","d","Math","sqrt","filters","assign"],"mappings":"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","file":"tiltshift.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Make sure PIXI global object is available\nif (typeof PIXI === \"undefined\") {\n    throw new Error('pixi.js is required to be included');\n}","\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nfunction TiltShiftAxisFilter()\n{\n    PIXI.Filter.call(this,\n        // vertex shader\n        \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",\n        // fragment shader\n        \"#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float blur;\\nuniform float gradientBlur;\\nuniform vec2 start;\\nuniform vec2 end;\\nuniform vec2 delta;\\nuniform vec2 texSize;\\n\\nfloat random(vec3 scale, float seed)\\n{\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n    float total = 0.0;\\n\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\\n\\n    for (float t = -30.0; t <= 30.0; t++)\\n    {\\n        float percent = (t + offset - 0.5) / 30.0;\\n        float weight = 1.0 - abs(percent);\\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\\n        sample.rgb *= sample.a;\\n        color += sample * weight;\\n        total += weight;\\n    }\\n\\n    gl_FragColor = color / total;\\n    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\\n}\\n\"\n\n    );\n\n    this.uniforms.blur = 100;\n    this.uniforms.gradientBlur = 600;\n    this.uniforms.start = new PIXI.Point(0, window.innerHeight / 2);\n    this.uniforms.end = new PIXI.Point(600, window.innerHeight / 2);\n    this.uniforms.delta = new PIXI.Point(30, 30);\n    this.uniforms.texSize = new PIXI.Point(window.innerWidth, window.innerHeight);\n\n    this.updateDelta();\n}\n\nTiltShiftAxisFilter.prototype = Object.create(PIXI.Filter.prototype);\nTiltShiftAxisFilter.prototype.constructor = TiltShiftAxisFilter;\nmodule.exports = TiltShiftAxisFilter;\n\n/**\n * Updates the filter delta values.\n * This is overridden in the X and Y filters, does nothing for this class.\n *\n */\nTiltShiftAxisFilter.prototype.updateDelta = function ()\n{\n    this.uniforms.delta.x = 0;\n    this.uniforms.delta.y = 0;\n};\n\nObject.defineProperties(TiltShiftAxisFilter.prototype, {\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    blur: {\n        get: function ()\n        {\n            return this.uniforms.blur;\n        },\n        set: function (value)\n        {\n            this.uniforms.blur = value;\n        }\n    },\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    gradientBlur: {\n        get: function ()\n        {\n            return this.uniforms.gradientBlur;\n        },\n        set: function (value)\n        {\n            this.uniforms.gradientBlur = value;\n        }\n    },\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    start: {\n        get: function ()\n        {\n            return this.uniforms.start;\n        },\n        set: function (value)\n        {\n            this.uniforms.start = value;\n            this.updateDelta();\n        }\n    },\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    end: {\n        get: function ()\n        {\n            return this.uniforms.end;\n        },\n        set: function (value)\n        {\n            this.uniforms.end = value;\n            this.updateDelta();\n        }\n    }\n});\n","var TiltShiftXFilter = require('./TiltShiftXFilter'),\n    TiltShiftYFilter = require('./TiltShiftYFilter');\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nfunction TiltShiftFilter()\n{\n    PIXI.Filter.call(this);\n\n    this.tiltShiftXFilter = new TiltShiftXFilter();\n    this.tiltShiftYFilter = new TiltShiftYFilter();\n}\n\nTiltShiftFilter.prototype = Object.create(PIXI.Filter.prototype);\nTiltShiftFilter.prototype.constructor = TiltShiftFilter;\nmodule.exports = TiltShiftFilter;\n\nTiltShiftFilter.prototype.apply = function (filterManager, input, output)\n{\n    var renderTarget = filterManager.getRenderTarget(true);\n\n    this.tiltShiftXFilter.apply(filterManager, input, renderTarget);\n\n    this.tiltShiftYFilter.apply(filterManager, renderTarget, output);\n\n    filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(TiltShiftFilter.prototype, {\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftFilter#\n     */\n    blur: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n        }\n    },\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftFilter#\n     */\n    gradientBlur: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.gradientBlur;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n        }\n    },\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftFilter#\n     */\n    start: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.start;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n        }\n    },\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftFilter#\n     */\n    end: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.end;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n        }\n    }\n});\n","var TiltShiftAxisFilter = require('./TiltShiftAxisFilter');\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n */\nfunction TiltShiftXFilter()\n{\n    TiltShiftAxisFilter.call(this);\n}\n\nTiltShiftXFilter.prototype = Object.create(TiltShiftAxisFilter.prototype);\nTiltShiftXFilter.prototype.constructor = TiltShiftXFilter;\nmodule.exports = TiltShiftXFilter;\n\n/**\n * Updates the filter delta values.\n *\n */\nTiltShiftXFilter.prototype.updateDelta = function ()\n{\n    var dx = this.uniforms.end.x - this.uniforms.start.x;\n    var dy = this.uniforms.end.y - this.uniforms.start.y;\n    var d = Math.sqrt(dx * dx + dy * dy);\n\n    this.uniforms.delta.x = dx / d;\n    this.uniforms.delta.y = dy / d;\n};\n","var TiltShiftAxisFilter = require('./TiltShiftAxisFilter');\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n */\nfunction TiltShiftYFilter()\n{\n    TiltShiftAxisFilter.call(this);\n}\n\nTiltShiftYFilter.prototype = Object.create(TiltShiftAxisFilter.prototype);\nTiltShiftYFilter.prototype.constructor = TiltShiftYFilter;\nmodule.exports = TiltShiftYFilter;\n\n/**\n * Updates the filter delta values.\n *\n */\nTiltShiftYFilter.prototype.updateDelta = function ()\n{\n    var dx = this.uniforms.end.x - this.uniforms.start.x;\n    var dy = this.uniforms.end.y - this.uniforms.start.y;\n    var d = Math.sqrt(dx * dx + dy * dy);\n\n    this.uniforms.delta.x = -dy / d;\n    this.uniforms.delta.y = dx / d;\n};\n","require('../check');\n\nvar filters = {\n    TiltShiftFilter: require('./TiltShiftFilter'),\n    TiltShiftXFilter: require('./TiltShiftFilter'),\n    TiltShiftYFilter: require('./TiltShiftFilter'),\n    TiltShiftAxisFilter: require('./TiltShiftAxisFilter')\n};\n\nObject.assign(PIXI.filters, filters);\n\n// Export for requiring\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = filters;\n}"],"sourceRoot":"/source/"}