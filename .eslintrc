{
  "extends": [
      "plugin:flowtype/recommended",
      "airbnb"
  ],
  "plugins": [
      "flowtype"
  ],
  "env": {
      "browser": true,
      "node": true
  },
  "globals": {
      "PIXI": false
  },
  "parser": "babel-eslint",
  "rules": {
    # We use _ to define private variables and methods in clases
    "no-underscore-dangle": 0,
    # This seems to be buggy we don't want eslint to check this
    "import/no-extraneous-dependencies": 0,
    # This is a depricated rule. So we turned off it.
    "react/require-extension": 0,
    # We can write JSX in anyfile we want.
    "react/jsx-filename-extension": 0,
    # We don't like this rule.
    "arrow-body-style": 0,
    # We don't like this rule. We write arrow functions only when we needed.
    "prefer-arrow-callback": 0,
    # We don't need to write function names always.
    "func-names": 0,
    # propTypes can be object
    "react/forbid-prop-types": 0,

    "flowtype/boolean-style": [
        2,
        "boolean"
    ],
    "flowtype/define-flow-type": 1,
    "flowtype/delimiter-dangle": [
        2,
        "never"
    ],
    "flowtype/generic-spacing": [
        2,
        "never"
    ],
    "flowtype/no-primitive-constructor-types": 2,
    "flowtype/no-types-missing-file-annotation": 2,
    "flowtype/no-weak-types": 2,
    "flowtype/object-type-delimiter": [
        2,
        "comma"
    ],
    "flowtype/require-parameter-type": 2,
    "flowtype/require-return-type": [
        2,
        "always",
        {
            "annotateUndefined": "never"
        }
    ],
    "flowtype/require-valid-file-annotation": 2,
    "flowtype/semi": [
        2,
        "always"
    ],
    "flowtype/space-after-type-colon": [
        2,
        "always"
    ],
    "flowtype/space-before-generic-bracket": [
        2,
        "never"
    ],
    "flowtype/space-before-type-colon": [
        2,
        "never"
    ],
    "flowtype/type-id-match": [
        2,
        "^([A-Z][a-z0-9]+)+Type$"
    ],
    "flowtype/union-intersection-spacing": [
        2,
        "always"
    ],
    "flowtype/use-flow-type": 1,
    "flowtype/valid-syntax": 1
  },
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": true
    }
  }
}
